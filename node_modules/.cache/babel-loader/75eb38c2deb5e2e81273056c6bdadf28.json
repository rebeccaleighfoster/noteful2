{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\components\\\\NotesContainer\\\\index.js\";\nimport React from 'react';\nimport Folders from \"./Folders\";\nimport { Link } from \"react-router-dom\";\nimport MyContext from \"../MyContext\";\nimport PropTypes from \"prop-types\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport ErrorBoundary from '../ErrorBoundary';\n\nclass NotesContainer extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.id !== this.props.id) {}\n  }\n\n  render() {\n    const folderId = this.props.match.params.id || null; //why is this working??? \n\n    const timestamp = Date.now();\n    return React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(MyContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"folders-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Folders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/folder/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Add Folder\")))), React.createElement(\"div\", {\n      className: \"notes-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, context.notes.map(note => React.createElement(ListGroupItem, {\n      key: note.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: note.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/note/\".concat(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, note.note_name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(timestamp), \" \"), React.createElement(\"button\", {\n      className: \"Note__delete\",\n      type: \"button\",\n      onClick: () => context.deleteNote(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" Delete Note \"))), React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add Note\"))))))));\n  }\n\n}\n\nNotesContainer.propTypes = {\n  value: PropTypes.string.isRequired\n};\nexport default NotesContainer;","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\components\\NotesContainer\\index.js"],"names":["React","Folders","Link","MyContext","PropTypes","ListGroup","ListGroupItem","ErrorBoundary","NotesContainer","Component","componentDidUpdate","prevProps","id","props","render","folderId","match","params","timestamp","Date","now","context","notes","map","note","note_name","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","deleteNote","propTypes","value","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Folders from \"./Folders\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyContext from \"../MyContext\"\r\nimport PropTypes from \"prop-types\";\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nclass NotesContainer extends React.Component {\r\n \r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.id !== this.props.id) {\r\n\r\n    }\r\n  }\r\n  render() {\r\n    const folderId = this.props.match.params.id || null; //why is this working??? \r\n    const timestamp = Date.now();\r\n    return (\r\n      <ErrorBoundary>\r\n        <MyContext.Consumer>\r\n          {(context) => (\r\n            <div className=\"d-flex\">\r\n              <div className=\"folders-pane\">\r\n                <Folders />\r\n                <ListGroupItem>\r\n                  <Link to=\"/folder/add\">\r\n                    <button type=\"button\">\r\n                      Add Folder\r\n                         </button>\r\n                  </Link>\r\n                </ListGroupItem>\r\n              </div>\r\n              <div className=\"notes-pane\">\r\n                <ListGroup>\r\n                  {context.notes.map(note =>\r\n                    <ListGroupItem key={note.id}>\r\n                      <div key={note.id}>\r\n                        <Link to={`/note/${note.id}`}>{note.note_name}</Link>\r\n                      </div>\r\n                      <div> {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(timestamp)} </div>\r\n                      <button\r\n                        className='Note__delete'\r\n                        type='button'\r\n                        onClick={() => context.deleteNote(note)}\r\n                      > Delete Note </button>\r\n                    </ListGroupItem>\r\n                  )}\r\n                  <ListGroupItem>\r\n                    <Link to=\"/notes/add\">\r\n                      <button type=\"button\">\r\n                        Add Note\r\n                         </button>\r\n                    </Link>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nNotesContainer.propTypes = {\r\n  value: PropTypes.string.isRequired\r\n}\r\n\r\nexport default NotesContainer;\r\n"]},"metadata":{},"sourceType":"module"}