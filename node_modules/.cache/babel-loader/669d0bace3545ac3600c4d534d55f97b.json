{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport NotesContainer from \"./components/NotesContainer\";\nimport NoteInfo from \"./components/NoteInfo\";\nimport AddFolder from \"./components/AddFolder\";\nimport MyContext from \"./components/MyContext\";\nimport AddNote from \"./components/AddNote/AddNote\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterByFolderId = (notes, folderId) => {\n      return notes.map(note => {\n        if (note.folderId === folderId) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/note/\".concat(note.id),\n            key: note.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, note.name));\n        }\n\n        return null;\n      });\n    };\n\n    this.handleNoteDelete = note => {\n      const noteId = note.id;\n      fetch(\"http://localhost:8000/notes/\".concat(noteId), {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res.json();\n      }).then(() => {\n        this.setState(prevState => ({\n          notes: prevState.notes.filter(note => !(note.id === noteId))\n        }));\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.handleFolderDelete = deletedFolder => {\n      const _this$state = this.state,\n            folders = _this$state.folders,\n            notes = _this$state.notes;\n      fetch(\"http://localhost:8000/folders/\".concat(deletedFolder.id), {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res.json();\n      }).then(() => {\n        const newFolderSet = folders.filter(folderObj => !(folderObj.id === deletedFolder.id));\n        const newNoteSet = notes.filter(noteObj => !(noteObj.folderId === deletedFolder.id));\n        this.setState({\n          folders: newFolderSet,\n          notes: newNoteSet\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.addFolder = newFolder => {\n      console.log(newFolder);\n      const folders = this.state.folders;\n      folders.push(newFolder);\n      this.setState({\n        folders\n      });\n    };\n\n    this.addNote = newNote => {\n      console.log(newNote);\n      const notes = this.state.notes;\n      notes.push(newNote);\n      this.setState({\n        notes\n      });\n    };\n\n    this.state = {\n      folders: [],\n      notes: []\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(\"http://localhost:8000/notes\"), fetch(\"http://localhost:8000/folders\")]).then(([notesResponse, foldersResponse]) => {\n      if (!notesResponse.ok) return notesResponse.json().then(e => Promise.reject(e));\n      if (!foldersResponse.ok) return foldersResponse.json().then(e => Promise.reject(e));\n      return Promise.all([notesResponse.json(), foldersResponse.json()]);\n    }).then(([notes, folders]) => {\n      this.setState({\n        notes,\n        folders\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          folders = _this$state2.folders,\n          notes = _this$state2.notes;\n    return React.createElement(MyContext.Provider, {\n      value: {\n        notes,\n        folders,\n        addFolder: this.addFolder,\n        addNote: this.addNote,\n        deleteNote: this.handleNoteDelete,\n        deleteFolder: this.handleFolderDelete\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: NotesContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/folder/:id\",\n      exact: true,\n      component: NotesContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      exact: true,\n      component: NoteInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/folder/add\",\n      exact: true,\n      component: AddFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/notes/add\",\n      exact: true,\n      component: AddNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","NotesContainer","NoteInfo","AddFolder","MyContext","AddNote","App","Component","constructor","props","filterByFolderId","notes","folderId","map","note","id","name","handleNoteDelete","noteId","fetch","method","headers","then","res","ok","json","e","Promise","reject","setState","prevState","filter","catch","error","console","handleFolderDelete","deletedFolder","state","folders","newFolderSet","folderObj","newNoteSet","noteObj","addFolder","newFolder","log","push","addNote","newNote","componentDidMount","all","notesResponse","foldersResponse","render","deleteNote","deleteFolder"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotesContainer from \"./components/NotesContainer\";\r\nimport NoteInfo from \"./components/NoteInfo\";\r\nimport AddFolder from \"./components/AddFolder\";\r\nimport MyContext from \"./components/MyContext\";\r\nimport AddNote from \"./components/AddNote/AddNote\"\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folders: [],\r\n      notes: []\r\n    };\r\n  }\r\n\r\n  filterByFolderId = (notes, folderId) => {\r\n    return notes.map(note => {\r\n      if (note.folderId === folderId) {\r\n        return (\r\n          <div>\r\n            <Link to={`/note/${note.id}`} key={note.id}>\r\n              {note.name}\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(`http://localhost:8000/notes`),\r\n      fetch(`http://localhost:8000/folders`)\r\n    ])\r\n      .then(([notesResponse, foldersResponse]) => {\r\n        if (!notesResponse.ok)\r\n          return notesResponse.json().then(e => Promise.reject(e));\r\n        if (!foldersResponse.ok)\r\n          return foldersResponse.json().then(e => Promise.reject(e));\r\n        return Promise.all([notesResponse.json(), foldersResponse.json()]);\r\n      })\r\n      .then(([notes, folders]) => {\r\n        this.setState({\r\n          notes,\r\n          folders\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  }\r\n\r\n  handleNoteDelete = (note) => {\r\n    const noteId = note.id;\r\n    fetch(`http://localhost:8000/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(() => {\r\n        this.setState(prevState => ({\r\n          notes: prevState.notes.filter(note => !(note.id === noteId))\r\n        }))\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  };\r\n\r\n  handleFolderDelete = deletedFolder => {\r\n    const { folders, notes } = this.state;\r\n    fetch(`http://localhost:8000/folders/${deletedFolder.id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        const newFolderSet = folders.filter(\r\n          folderObj => !(folderObj.id === deletedFolder.id)\r\n        );\r\n        const newNoteSet = notes.filter(\r\n          noteObj => !(noteObj.folderId === deletedFolder.id)\r\n        );\r\n        this.setState({\r\n          folders: newFolderSet,\r\n          notes: newNoteSet\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  };\r\n\r\n  addFolder = newFolder => {\r\n    console.log(newFolder);\r\n    const { folders } = this.state;\r\n    folders.push(newFolder);\r\n    this.setState({\r\n      folders\r\n    });\r\n  };\r\n\r\n  addNote = newNote => {\r\n    console.log(newNote);\r\n    const { notes } = this.state;\r\n    notes.push(newNote);\r\n    this.setState({\r\n      notes\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { folders, notes } = this.state;\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          notes,\r\n          folders,\r\n          addFolder: this.addFolder,\r\n          addNote: this.addNote,\r\n          deleteNote: this.handleNoteDelete,\r\n          deleteFolder: this.handleFolderDelete\r\n        }}\r\n      >\r\n        <Router>\r\n          <Route path=\"/\" exact component={NotesContainer} />\r\n          <Route path=\"/folder/:id\" exact component={NotesContainer} />\r\n          <Route path=\"/note/:noteId\" exact component={NoteInfo} />\r\n          <Route path=\"/folder/add\" exact component={AddFolder} />\r\n          <Route path=\"/notes/add\" exact component={AddNote} />\r\n        </Router>\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}