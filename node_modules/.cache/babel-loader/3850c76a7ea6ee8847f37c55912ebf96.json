{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\components\\\\NoteInfo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\"; //import MyContext from \"./MyContext\";\n//import { ListGroup } from 'reactstrap';\n//import { Link } from \"react-router-dom\";\n//change to class componeent, make api call \n//to back end and set it in the state \n// //pass this in fetch, create variable called note and put it in the state\n\n/*\r\nexport default class NoteInfo extends React.Component {\r\n  const note = props.match.params.noteId || null;\r\n  handleDisplayNote = () => {\r\n  fetch(`http://localhost:8000/notes/:id`,)\r\n \r\n    .then(response => response.json())\r\n    .then((note) => {\r\n      this.setState(note)\r\n    })\r\n    .catch(error => {\r\n      console.error({ error });\r\n    });\r\n}\r\n}*/\n\nexport default class NoteInfo extends React.Component {\n  componentDidMount(props) {\n    console.log(\"props from noteinfo\", props);\n    const note = props.match.params.noteId || null;\n    fetch(\"http://localhost:8000/notes/\".concat(note)).then(res => res.json()).then(res => {\n      this.setState(_objectSpread({}, this.state, {\n        notes: res\n      }));\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    console.log(\"from noteinfo:\", this.state);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" hi \"));\n  }\n\n}\n/*\r\n<ListGroup>\r\n  <MyContext.Consumer>\r\n       {context => {\r\n        console.log(context)\r\n        const noteId = props.match.params.noteId || null;\r\n        const note = context.notes.find((note) => (note.id === noteId))\r\n        const timestamp = Date.now();\r\n          return (\r\n            <>\r\n            <Link to={`/`}>\r\n                      <h3>Noteful Home</h3>\r\n                    </Link>\r\n              <h3>{note.name}</h3>\r\n              <div> {note.content}</div>\r\n              <div> {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp)} </div>\r\n              <Link to={`/`}>\r\n              <button\r\n                        className='Note__delete'\r\n                        type='button'\r\n                        onClick={() => context.deleteNote(note)}\r\n                      > Delete Note </button>\r\n               </Link>\r\n              <button className=\"backButton\">\r\n                  <div>\r\n                    <Link to={`/`}>\r\n                      Back\r\n                    </Link>\r\n                  </div>\r\n                </button>\r\n            </>\r\n            );\r\n      }}\r\n </MyContext.Consumer>\r\n</ListGroup>\r\n)\r\n}*/","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\components\\NoteInfo.js"],"names":["React","NoteInfo","Component","componentDidMount","props","console","log","note","match","params","noteId","fetch","then","res","json","setState","state","notes","catch","error","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAIA;AACA;AACA;;AACA;;;;;;;;;;;;;;;;AAiBA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACpDC,EAAAA,iBAAiB,CAACC,KAAD,EAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAlC;AACA,UAAMG,IAAI,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,MAAnB,IAA6B,IAA1C;AACAC,IAAAA,KAAK,uCAAgCJ,IAAhC,EAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKE,QAAL,mBACO,KAAKC,KADZ;AAEIC,QAAAA,KAAK,EAAEJ;AAFX;AAIH,KAPD,EAQCK,KARD,CAQQC,KAAK,IAAI;AACbd,MAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACH,KAVD;AAWD;;AAEDC,EAAAA,MAAM,GAAI;AACVf,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAb,EAA+B,KAAKU,KAApC;AACA,WACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADF;AAMC;;AAzBqD;AA6BpD","sourcesContent":["import React from \"react\";\r\n//import MyContext from \"./MyContext\";\r\n//import { ListGroup } from 'reactstrap';\r\n//import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n//change to class componeent, make api call \r\n//to back end and set it in the state \r\n// //pass this in fetch, create variable called note and put it in the state\r\n/*\r\nexport default class NoteInfo extends React.Component {\r\n  const note = props.match.params.noteId || null;\r\n  handleDisplayNote = () => {\r\n  fetch(`http://localhost:8000/notes/:id`,)\r\n \r\n    .then(response => response.json())\r\n    .then((note) => {\r\n      this.setState(note)\r\n    })\r\n    .catch(error => {\r\n      console.error({ error });\r\n    });\r\n}\r\n}*/\r\n\r\n\r\nexport default class NoteInfo extends React.Component { \r\n  componentDidMount(props){\r\n  console.log(\"props from noteinfo\",props)\r\n  const note = props.match.params.noteId || null;\r\n  fetch(`http://localhost:8000/notes/${note}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      this.setState({\r\n          ...this.state, \r\n          notes: res\r\n      })\r\n  })\r\n  .catch((error => {\r\n      console.error(error);\r\n  }));\r\n}\r\n\r\nrender () {\r\nconsole.log (\"from noteinfo:\", this.state)\r\nreturn (\r\n  <>\r\n  <div> hi </div>\r\n  </>\r\n)\r\n\r\n}\r\n}\r\n\r\n\r\n  /*\r\n  <ListGroup>\r\n    <MyContext.Consumer>\r\n         {context => {\r\n          console.log(context)\r\n          const noteId = props.match.params.noteId || null;\r\n          const note = context.notes.find((note) => (note.id === noteId))\r\n          const timestamp = Date.now();\r\n            return (\r\n              <>\r\n              <Link to={`/`}>\r\n                        <h3>Noteful Home</h3>\r\n                      </Link>\r\n                <h3>{note.name}</h3>\r\n                <div> {note.content}</div>\r\n                <div> {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp)} </div>\r\n                <Link to={`/`}>\r\n                <button\r\n                          className='Note__delete'\r\n                          type='button'\r\n                          onClick={() => context.deleteNote(note)}\r\n                        > Delete Note </button>\r\n                 </Link>\r\n                <button className=\"backButton\">\r\n                    <div>\r\n                      <Link to={`/`}>\r\n                        Back\r\n                      </Link>\r\n                    </div>\r\n                  </button>\r\n              </>\r\n              );\r\n        }}\r\n   </MyContext.Consumer>\r\n  </ListGroup>\r\n)\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}