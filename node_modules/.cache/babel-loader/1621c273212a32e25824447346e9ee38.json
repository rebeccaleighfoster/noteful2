{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NotesContainer from \"./components/NotesContainer\";\nimport NoteInfo from \"./components/NoteInfo\";\nimport AddFolder from \"./components/AddFolder\";\nimport MyContext from \"./components/MyContext\";\nimport AddNote from \"./components/AddNote/AddNote\"; //import config from './config';\n\nimport \"./App.css\";\n\nconst _require = require('./config'),\n      API_ENDPOINT = _require.API_ENDPOINT;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setFolderId = folder_id => {\n      console.log(folder_id);\n      this.setState({\n        folder_id\n      }, () => {\n        this.fetchNotesByFolderId();\n      });\n    };\n\n    this.fetchNotesByFolderId = () => {\n      const folder_id = this.state.folder_id;\n      const url = folder_id ? \"\".concat(API_ENDPOINT, \"/folder/\").concat(folder_id) : \"\";\n      fetch(\"\".concat(API_ENDPOINT, \"/notes\").concat(url)).then(resp => {\n        if (!resp.ok) return resp.json().then(e => Promise.reject(e));\n        return resp.json();\n      }).then(data => {\n        this.setState({\n          notes: data\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.fetchFolders = () => {\n      fetch(\"\".concat(API_ENDPOINT, \"/folders\")).then(foldersResponse => {\n        if (!foldersResponse.ok) return foldersResponse.json().then(e => Promise.reject(e));\n        return foldersResponse.json();\n      }).then(folders => {\n        this.setState({\n          folders\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.handleNoteDelete = note => {\n      const noteId = note.id;\n      fetch(\"\".concat(API_ENDPOINT, \"/notes/\").concat(noteId), {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {\n          this.fetchFolders();\n          this.fetchNotesByFolderId();\n        }\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.handleFolderDelete = folder => {\n      const folder_id = folder.id;\n      console.log({\n        folder_id\n      }, \"deleted\");\n      fetch(\"\".concat(API_ENDPOINT, \"folders/\").concat(folder_id), {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {\n          this.fetchFolders();\n          this.fetchNotesByFolderId();\n        }\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.state = {\n      folders: [],\n      notes: [],\n      folder_id: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFolders();\n    this.fetchNotesByFolderId();\n  }\n\n  render() {\n    const _this$state = this.state,\n          folders = _this$state.folders,\n          notes = _this$state.notes;\n    return React.createElement(MyContext.Provider, {\n      value: {\n        notes,\n        folders,\n        deleteNote: this.handleNoteDelete,\n        deleteFolder: this.handleFolderDelete,\n        setFolderId: this.setFolderId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" noteful \"), notes.map(item => {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"notes.note_name\");\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\App.js"],"names":["React","BrowserRouter","Router","Route","NotesContainer","NoteInfo","AddFolder","MyContext","AddNote","require","API_ENDPOINT","App","Component","constructor","props","setFolderId","folder_id","console","log","setState","fetchNotesByFolderId","state","url","fetch","then","resp","ok","json","e","Promise","reject","data","notes","catch","error","fetchFolders","foldersResponse","folders","handleNoteDelete","note","noteId","id","method","headers","res","handleFolderDelete","folder","componentDidMount","render","deleteNote","deleteFolder","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport NotesContainer from \"./components/NotesContainer\";\r\nimport NoteInfo from \"./components/NoteInfo\";\r\nimport AddFolder from \"./components/AddFolder\";\r\nimport MyContext from \"./components/MyContext\";\r\nimport AddNote from \"./components/AddNote/AddNote\"\r\n//import config from './config';\r\nimport \"./App.css\";\r\n\r\nconst { API_ENDPOINT } = require('./config')\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folders: [],\r\n      notes: [],\r\n      folder_id: null\r\n    };\r\n  }\r\n\r\n  setFolderId = (folder_id) => {\r\n    console.log(folder_id)\r\n    this.setState({\r\n      folder_id\r\n    }, () => {\r\n      this.fetchNotesByFolderId()\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n   this.fetchFolders();\r\n   this.fetchNotesByFolderId();\r\n  }\r\n\r\n  fetchNotesByFolderId = () => {\r\n    const { folder_id } = this.state;\r\n    const url = folder_id ? `${API_ENDPOINT}/folder/${folder_id}` : ``;\r\n    fetch(`${API_ENDPOINT}/notes${url}`)\r\n      .then((resp) => {\r\n        if (!resp.ok)\r\n          return resp.json().then(e => Promise.reject(e));\r\n        return resp.json();\r\n      }).then(data => {\r\n        this.setState({\r\n          notes: data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  }\r\n\r\n  fetchFolders = () => {\r\n    fetch(`${API_ENDPOINT}/folders`)\r\n      .then((foldersResponse) => {\r\n        if (!foldersResponse.ok)\r\n          return foldersResponse.json().then(e => Promise.reject(e));\r\n        return foldersResponse.json();\r\n      })\r\n      .then((folders) => {\r\n        this.setState({\r\n          folders\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  }\r\n\r\n  handleNoteDelete = (note) => {\r\n    const noteId = note.id;\r\n    fetch(`${API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (res.ok){\r\n          this.fetchFolders();\r\n          this.fetchNotesByFolderId()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  };\r\n\r\n\r\n  handleFolderDelete = (folder) => {\r\n    const folder_id = folder.id;\r\n    console.log ({folder_id}, \"deleted\")\r\n    fetch(`${API_ENDPOINT}folders/${folder_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n    .then(res => {\r\n      if (res.ok){\r\n        this.fetchFolders();\r\n        this.fetchNotesByFolderId()\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error({ error })\r\n    })\r\n};\r\n\r\n  \r\n\r\n  render() {\r\n    const { folders, notes } = this.state;\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          notes,\r\n          folders,\r\n          deleteNote: this.handleNoteDelete,\r\n          deleteFolder: this.handleFolderDelete,\r\n          setFolderId: this.setFolderId\r\n        }}\r\n      >\r\n        <div>\r\n          <h1> noteful </h1>\r\n          {notes.map(item => {\r\n            return(\r\n              <p>notes.note_name</p>\r\n            )\r\n          })}\r\n        </div>\r\n       {/* <Router>\r\n        <Route path=\"/\" exact component={NotesContainer} />\r\n          <Route path=\"/folder/:id\" exact component={NotesContainer} />\r\n          <Route path=\"/note/:noteId\" exact component={NoteInfo} />\r\n          <Route path=\"/folder/add\" exact component={AddFolder} />\r\n          <Route path=\"/notes/add\" exact component={AddNote} />\r\n       </Router>*/}\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}