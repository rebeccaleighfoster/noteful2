{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport NotesContainer from \"./components/NotesContainer\";\nimport NoteInfo from \"./components/NoteInfo\";\nimport AddFolder from \"./components/AddFolder\";\nimport MyContext from \"./components/MyContext\";\nimport AddNote from \"./components/AddNote/AddNote\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterByFolderId = (notes, folderId) => {\n      return notes.map(note => {\n        if (note.folderId === folderId) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/note/\".concat(note.id),\n            key: note.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, note.name));\n        }\n\n        return null;\n      });\n    };\n\n    this.fetchNotesByFolderId = id => {\n      const url = id ? \"/folder/\".concat(id) : \"\";\n      fetch(\"http://localhost:8000/notes\".concat(url)).then(resp => {\n        if (!resp.ok) return resp.json().then(e => Promise.reject(e));\n        return resp.json();\n      }).then(data => {\n        this.setState({\n          notes: data\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.fetchFolders = () => {\n      fetch(\"http://localhost:8000/folders\").then(foldersResponse => {\n        if (!foldersResponse.ok) return foldersResponse.json().then(e => Promise.reject(e));\n        return foldersResponse.json();\n      }).then(folders => {\n        this.setState({\n          folders\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.handleNoteDelete = note => {\n      const noteId = note.id;\n      fetch(\"http://localhost:8000/notes/\".concat(noteId), {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(res => {\n        if (res.ok) {\n          this.fetchFolders();\n        }\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.handleFolderDelete = deletedFolder => {\n      const _this$state = this.state,\n            folders = _this$state.folders,\n            notes = _this$state.notes;\n      fetch(\"http://localhost:8000/folders/\".concat(deletedFolder.id), {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(res => {\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\n        return res.json();\n      }).then(() => {\n        const newFolderSet = folders.filter(folderObj => !(folderObj.id === deletedFolder.id));\n        const newNoteSet = notes.filter(noteObj => !(noteObj.folderId === deletedFolder.id));\n        this.setState({\n          folders: newFolderSet,\n          notes: newNoteSet\n        });\n      }).catch(error => {\n        console.error({\n          error\n        });\n      });\n    };\n\n    this.addFolder = newFolder => {\n      console.log(newFolder);\n      const folders = this.state.folders;\n      folders.push(newFolder);\n      this.setState({\n        folders\n      });\n    };\n\n    this.addNote = newNote => {\n      console.log(newNote);\n      const notes = this.state.notes;\n      notes.push(newNote);\n      this.setState({\n        notes\n      });\n    };\n\n    this.state = {\n      folders: [],\n      notes: [],\n      folder_id: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFolders();\n    this.fetchNotesByFolderId();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          folders = _this$state2.folders,\n          notes = _this$state2.notes;\n    return React.createElement(MyContext.Provider, {\n      value: {\n        notes,\n        folders,\n        addFolder: this.addFolder,\n        addNote: this.addNote,\n        deleteNote: this.handleNoteDelete,\n        deleteFolder: this.handleFolderDelete,\n        notesById: this.fetchNotesByFolderId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: NotesContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/folder/:id\",\n      exact: true,\n      component: NotesContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/note/:noteId\",\n      exact: true,\n      component: NoteInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/folder/add\",\n      exact: true,\n      component: AddFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/notes/add\",\n      exact: true,\n      component: AddNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\App.js"],"names":["React","BrowserRouter","Router","Route","Link","NotesContainer","NoteInfo","AddFolder","MyContext","AddNote","App","Component","constructor","props","filterByFolderId","notes","folderId","map","note","id","name","fetchNotesByFolderId","url","fetch","then","resp","ok","json","e","Promise","reject","data","setState","catch","error","console","fetchFolders","foldersResponse","folders","handleNoteDelete","noteId","method","headers","res","handleFolderDelete","deletedFolder","state","newFolderSet","filter","folderObj","newNoteSet","noteObj","addFolder","newFolder","log","push","addNote","newNote","folder_id","componentDidMount","render","deleteNote","deleteFolder","notesById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotesContainer from \"./components/NotesContainer\";\r\nimport NoteInfo from \"./components/NoteInfo\";\r\nimport AddFolder from \"./components/AddFolder\";\r\nimport MyContext from \"./components/MyContext\";\r\nimport AddNote from \"./components/AddNote/AddNote\"\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      folders: [],\r\n      notes: [],\r\n      folder_id: null\r\n    };\r\n  }\r\n\r\n  filterByFolderId = (notes, folderId) => {\r\n    return notes.map(note => {\r\n      if (note.folderId === folderId) {\r\n        return (\r\n          <div>\r\n            <Link to={`/note/${note.id}`} key={note.id}>\r\n              {note.name}\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n   this.fetchFolders();\r\n   this.fetchNotesByFolderId();\r\n  }\r\n\r\n  fetchNotesByFolderId = (id) => {\r\n    const url = id ? `/folder/${id}` : ``;\r\n    fetch(`http://localhost:8000/notes${url}`)\r\n      .then((resp) => {\r\n        if (!resp.ok)\r\n          return resp.json().then(e => Promise.reject(e));\r\n        return resp.json();\r\n      }).then(data => {\r\n        this.setState({\r\n          notes: data\r\n        })\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  }\r\n\r\n  fetchFolders = () => {\r\n    fetch(`http://localhost:8000/folders`)\r\n      .then((foldersResponse) => {\r\n        if (!foldersResponse.ok)\r\n          return foldersResponse.json().then(e => Promise.reject(e));\r\n        return foldersResponse.json();\r\n      })\r\n      .then((folders) => {\r\n        this.setState({\r\n          folders\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  }\r\n\r\n  handleNoteDelete = (note) => {\r\n    const noteId = note.id;\r\n    fetch(`http://localhost:8000/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (res.ok){\r\n          this.fetchFolders()\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  };\r\n\r\n  //change folder delete to look like note delete\r\n\r\n  handleFolderDelete = deletedFolder => {\r\n    const { folders, notes } = this.state;\r\n    fetch(`http://localhost:8000/folders/${deletedFolder.id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) return res.json().then(e => Promise.reject(e));\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        const newFolderSet = folders.filter(\r\n          folderObj => !(folderObj.id === deletedFolder.id)\r\n        );\r\n        const newNoteSet = notes.filter(\r\n          noteObj => !(noteObj.folderId === deletedFolder.id)\r\n        );\r\n        this.setState({\r\n          folders: newFolderSet,\r\n          notes: newNoteSet\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error({ error });\r\n      });\r\n  };\r\n\r\n  addFolder = newFolder => {\r\n    console.log(newFolder);\r\n    const { folders } = this.state;\r\n    folders.push(newFolder);\r\n    this.setState({\r\n      folders\r\n    });\r\n  };\r\n\r\n  addNote = newNote => {\r\n    console.log(newNote);\r\n    const { notes } = this.state;\r\n    notes.push(newNote);\r\n    this.setState({\r\n      notes\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { folders, notes } = this.state;\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          notes,\r\n          folders,\r\n          addFolder: this.addFolder,\r\n          addNote: this.addNote,\r\n          deleteNote: this.handleNoteDelete,\r\n          deleteFolder: this.handleFolderDelete,\r\n          notesById: this.fetchNotesByFolderId\r\n        }}\r\n      >\r\n        <Router>\r\n          <Route path=\"/\" exact component={NotesContainer} />\r\n          <Route path=\"/folder/:id\" exact component={NotesContainer} />\r\n          <Route path=\"/note/:noteId\" exact component={NoteInfo} />\r\n          <Route path=\"/folder/add\" exact component={AddFolder} />\r\n          <Route path=\"/notes/add\" exact component={AddNote} />\r\n        </Router>\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}