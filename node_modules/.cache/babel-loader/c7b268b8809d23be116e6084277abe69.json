{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19523\\\\Documents\\\\noteful2\\\\src\\\\components\\\\NotesContainer\\\\index.js\";\nimport React from 'react';\nimport Folders from \"./Folders\";\nimport { Link } from \"react-router-dom\";\nimport MyContext from \"../MyContext\";\nimport PropTypes from \"prop-types\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport ErrorBoundary from '../ErrorBoundary';\n\nclass NotesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filterByFolderId = (notes, folderId) => {\n      return notes.map(note => {\n        if (note.folderId === folderId) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/note/\".concat(note.id),\n            key: note.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15\n            },\n            __self: this\n          }, note.name));\n        }\n\n        return null;\n      });\n    };\n  }\n\n  render() {\n    const folderId = this.props.match.params.id || null;\n    return React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(MyContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"folders-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Folders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/folder/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Add folder!\")))), React.createElement(\"div\", {\n      className: \"notes-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, folderId ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.filterByFolderId(context.notes, folderId)) : React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, context.notes.map(note => React.createElement(ListGroupItem, {\n      key: note.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: note.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/note/\".concat(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, note.name)), React.createElement(\"button\", {\n      className: \"Note__delete\",\n      type: \"button\",\n      onClick: () => context.deleteNote(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" Delete Note \"))), React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Add Note!\"))))))));\n  }\n\n}\n\nNotesContainer.propTypes = {\n  value: PropTypes.string\n};\nexport default NotesContainer;","map":{"version":3,"sources":["C:\\Users\\19523\\Documents\\noteful2\\src\\components\\NotesContainer\\index.js"],"names":["React","Folders","Link","MyContext","PropTypes","ListGroup","ListGroupItem","ErrorBoundary","NotesContainer","Component","filterByFolderId","notes","folderId","map","note","id","name","render","props","match","params","context","deleteNote","propTypes","value","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Folders from \"./Folders\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MyContext from \"../MyContext\"\r\nimport PropTypes from \"prop-types\";\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport ErrorBoundary from '../ErrorBoundary';\r\n\r\nclass NotesContainer extends React.Component {\r\n    filterByFolderId = (notes, folderId) => {\r\n      return notes.map(note => {\r\n        if (note.folderId === folderId) {\r\n          return (\r\n            <div>\r\n              <Link to={`/note/${note.id}`} key={note.id}>\r\n                {note.name}\r\n              </Link>\r\n            </div>\r\n          );\r\n        }\r\n        return null;\r\n      });\r\n    };\r\n    render() {\r\n      const folderId = this.props.match.params.id || null;\r\n      return (\r\n        <ErrorBoundary>\r\n        <MyContext.Consumer>\r\n          {(context) => (\r\n            <div className=\"d-flex\">\r\n                <div className=\"folders-pane\">\r\n                <Folders />\r\n                <ListGroupItem>\r\n                <Link to=\"/folder/add\">\r\n                        <button type=\"button\">\r\n                          Add folder!\r\n                         </button>\r\n                          </Link>\r\n                </ListGroupItem>\r\n              </div>\r\n              <div className=\"notes-pane\">\r\n                {folderId ? (<div>\r\n                  {this.filterByFolderId(context.notes, folderId)}\r\n                </div>) : (\r\n                  <ListGroup>\r\n                    {context.notes.map(note =>\r\n                      <ListGroupItem key={note.id}>\r\n                        <div key={note.id}>\r\n                          <Link to={`/note/${note.id}`}>{note.name}</Link>\r\n                        </div>\r\n                        <button\r\n                          className='Note__delete'\r\n                          type='button'\r\n                          onClick={() => context.deleteNote(note)}\r\n                        > Delete Note </button>\r\n                        </ListGroupItem>\r\n                      )}\r\n                      <ListGroupItem>\r\n                      <Link to=\"/notes/add\">\r\n                        <button type=\"button\">\r\n                          Add Note!\r\n                         </button>\r\n                          </Link>\r\n                        </ListGroupItem>\r\n                  </ListGroup>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </MyContext.Consumer>\r\n        </ErrorBoundary>\r\n      )\r\n    }\r\n  }\r\n\r\n  NotesContainer.propTypes = {\r\n    value: PropTypes.string\r\n  }\r\n\r\n  export default NotesContainer;\r\n"]},"metadata":{},"sourceType":"module"}